<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>多数据源 on Phantom</title>
    <link>https://zxs94.github.io:1313/tags/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/</link>
    <description>Recent content in 多数据源 on Phantom</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 03 Jul 2019 14:14:44 +0000</lastBuildDate>
    <atom:link href="https://zxs94.github.io:1313/tags/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot之多数据源配置</title>
      <link>https://zxs94.github.io:1313/posts/springbootdatasource/</link>
      <pubDate>Wed, 03 Jul 2019 14:14:44 +0000</pubDate>
      <guid>https://zxs94.github.io:1313/posts/springbootdatasource/</guid>
      <description>应用背景 链接到标题 因为项目需求导致需要连接多个数据源，可能为Mysql及其他源，所以需要在项目中配置多数据源，来达到执行不同业务的时候切换不同的数据源。&#xA;参考了很多资料，结合应用本身，决定使用配置类来配置动态数据源，通过配置AOP在service层上配置切点来控制数据源的切换。&#xA;1.动态数据源 DynamicDataSource.java 链接到标题 首先定义一个动态数据源类&#xA;public class DynamicDataSource extends AbstractRoutingDataSource { @Override protected Object determineCurrentLookupKey() { DataSourceType.DataBaseType dataBaseType = DataSourceType.getDataBaseType(); return dataBaseType; } } 2.切换数据源线程类 DataSourceType.java 链接到标题 public class DataSourceType { public enum DataBaseType { DATA1, DATA2 } // 使用ThreadLocal保证线程安全 private static final ThreadLocal&amp;lt;DataBaseType&amp;gt; TYPE = new ThreadLocal&amp;lt;DataBaseType&amp;gt;(); // 往当前线程里设置数据源类型 public static void setDataBaseType(DataBaseType dataBaseType) { if (dataBaseType == null) { throw new NullPointerException(); } System.err.println(&amp;#34;[将当前数据源改为]：&amp;#34; + dataBaseType); TYPE.</description>
    </item>
  </channel>
</rss>
